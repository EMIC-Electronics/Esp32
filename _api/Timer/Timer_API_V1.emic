//RFI TAG:driverName=TIMER


/**
* @fn void setTime.{name}.(uint32_t time,char mode);
* @alias Timer.{name}..set
* @brief Time in milliseconds for the event to be generated
* @return Nothing
* @param time Time in milliseconds
* @param mode Select timer mode - T:timer, A:auto-reload
*/

/**
* @fn extern void etOut.{name}.(void);
* @alias Timer.{name}..timeOut
* @brief When the time configured in the timer1 was established. 
* @return Nothing
*/



EMIC:setInput(DEV:_hal/.{UC_FAMILY}./_hard/Timer/timer.emic)


EMIC:copy(inc/Timer_API_V1.h > TARGET:src/inc/Timer.{name}._API_V1.h,name=.{name}.)
EMIC:define(includes_target.Timer.{name}._API_V1,Timer.{name}._API_V1)

EMIC:copy(src/Timer_API_V1.c > TARGET:src/src/Timer.{name}._API_V1.c.h,name=.{name}.)
EMIC:define(includes_src.Timer.{name}._API_V1,Timer.{name}._API_V1)

